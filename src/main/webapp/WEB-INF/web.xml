<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">
    <display-name>Archetype Created Web Application</display-name>

    <!-- 加载spring容器，使用通配符的方式，加载多个spring配置文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:spring/applicationContext-*.xml
        </param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--解决springmvc post乱码问题 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <!--springmvc 前端控制器 -->
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!-- 同时需要在web.xml中初始化时，加载一些初始化参数，
            这些参数指明需要同时加载的处理器映射器、适配器的具体配置文件地址。
            如果不配置contextConfigLocation,则默认查找/web-inf/servlet名称-servlet.xml(springmvc-servlet.xml)-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc/springmvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!--url映射有几种方法：注意可以同时配置多个web映射方式
         1、*.action,以.action结尾的url都由springmvc DispatcherServlet进行解析
         2、/,所有访问地址都由DispatcherServlet进行解析进行解析，但是对于静态文件，让DispatcherServle不会进行解析，因为没有映射
         因此使用这种方式需要在springmvc的配置文件中单独对静态资源进行配置
         此种方式可以实现RESTful风格的url
         3、/*，这样的配置不对，使用这种配置，最终要转发到一个jsp页面时候，仍然由DispatcherServlet进行解析jsp地址,不能根据jsp页面找到
         handler
         -->
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>

    <servlet>
        <!--springmvc 前端控制器 -->
        <servlet-name>springmvc-RESTful</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc/springmvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc-RESTful</servlet-name>

        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>
